name: JwtCI

env:
  PROJECT_ID: 'cicdtest-438007'
  REGION: 'europe-north1'
  SERVICE: 'javathesis23'
  WORKLOAD_IDENTITY_PROVIDER: 'projects/775853616903/locations/global/workloadIdentityPools/github/providers/javathesis'
  SERVICE_ACCOUNT: 'github-actions-sa@cicdtest-438007.iam.gserviceaccount.com'
  GHA_ENDPOINT_OVERRIDE_oauth2: 'https://oauth2.myapi.endpoint/v1'

on:
  push:
    paths: [ 'jwt/**' ]
  pull_request:
    paths: [ 'jwt/**' ]

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Kotlin
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: gradle

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

#      - name: Run tests
#        run: ./gradlew :jwt:test
#        continue-on-error: false

      - name: Build JWT Jar
        run: ./gradlew :jwt:build

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: '${{ env.SERVICE_ACCOUNT }}'

      - name: Debug Docker Login
        run: docker login -u oauth2accesstoken -p "$(gcloud auth print-access-token)" europe-north1-docker.pkg.dev

      # BEGIN - Docker auth and build
      #
      # If you already have a container image, you can omit these steps.
      - name: 'Docker Auth'
        uses: 'docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567' # docker/login-action@v3
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.auth_token }}'
          registry: '${{ env.REGION }}-docker.pkg.dev'

      - name: 'Build and Push Container'
        run: |-
          DOCKER_TAG="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/jwt:${{ github.sha }}"
          docker build -f jwt/Dockerfile --tag "${DOCKER_TAG}" .
          docker push "${DOCKER_TAG}"